"""
    Harbor API

    These APIs provide services for manipulating Harbor project.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Generated by: https://openapi-generator.tech
"""


import unittest

import harbor_client
from harbor_client.api.products_api import ProductsApi  # noqa: E501


class TestProductsApi(unittest.TestCase):
    """ProductsApi unit test stubs"""

    def setUp(self):
        self.api = ProductsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_chartrepo_repo_charts_name_version_labels_get(self):
        """Test case for chartrepo_repo_charts_name_version_labels_get

        Return the attahced labels of chart.  # noqa: E501
        """
        pass

    def test_chartrepo_repo_charts_name_version_labels_id_delete(self):
        """Test case for chartrepo_repo_charts_name_version_labels_id_delete

        Remove label from chart.  # noqa: E501
        """
        pass

    def test_chartrepo_repo_charts_name_version_labels_post(self):
        """Test case for chartrepo_repo_charts_name_version_labels_post

        Mark label to chart.  # noqa: E501
        """
        pass

    def test_configurations_get(self):
        """Test case for configurations_get

        Get system configurations.  # noqa: E501
        """
        pass

    def test_configurations_put(self):
        """Test case for configurations_put

        Modify system configurations.  # noqa: E501
        """
        pass

    def test_email_ping_post(self):
        """Test case for email_ping_post

        Test connection and authentication with email server.  # noqa: E501
        """
        pass

    def test_health_get(self):
        """Test case for health_get

        Health check API  # noqa: E501
        """
        pass

    def test_labels_get(self):
        """Test case for labels_get

        List labels according to the query strings.  # noqa: E501
        """
        pass

    def test_labels_id_delete(self):
        """Test case for labels_id_delete

        Delete the label specified by ID.  # noqa: E501
        """
        pass

    def test_labels_id_get(self):
        """Test case for labels_id_get

        Get the label specified by ID.  # noqa: E501
        """
        pass

    def test_labels_id_put(self):
        """Test case for labels_id_put

        Update the label properties.  # noqa: E501
        """
        pass

    def test_labels_post(self):
        """Test case for labels_post

        Post creates a label  # noqa: E501
        """
        pass

    def test_ldap_groups_search_get(self):
        """Test case for ldap_groups_search_get

        Search available ldap groups.  # noqa: E501
        """
        pass

    def test_ldap_ping_post(self):
        """Test case for ldap_ping_post

        Ping available ldap service.  # noqa: E501
        """
        pass

    def test_ldap_users_import_post(self):
        """Test case for ldap_users_import_post

        Import selected available ldap users.  # noqa: E501
        """
        pass

    def test_ldap_users_search_get(self):
        """Test case for ldap_users_search_get

        Search available ldap users.  # noqa: E501
        """
        pass

    def test_projects_project_id_immutabletagrules_get(self):
        """Test case for projects_project_id_immutabletagrules_get

        List all immutable tag rules of current project  # noqa: E501
        """
        pass

    def test_projects_project_id_immutabletagrules_id_delete(self):
        """Test case for projects_project_id_immutabletagrules_id_delete

        Delete the immutable tag rule.  # noqa: E501
        """
        pass

    def test_projects_project_id_immutabletagrules_id_put(self):
        """Test case for projects_project_id_immutabletagrules_id_put

        Update the immutable tag rule or enable or disable the rule  # noqa: E501
        """
        pass

    def test_projects_project_id_immutabletagrules_post(self):
        """Test case for projects_project_id_immutabletagrules_post

        Add an immutable tag rule to current project  # noqa: E501
        """
        pass

    def test_projects_project_id_members_get(self):
        """Test case for projects_project_id_members_get

        Get all project member information  # noqa: E501
        """
        pass

    def test_projects_project_id_members_mid_delete(self):
        """Test case for projects_project_id_members_mid_delete

        Delete project member  # noqa: E501
        """
        pass

    def test_projects_project_id_members_mid_get(self):
        """Test case for projects_project_id_members_mid_get

        Get the project member information  # noqa: E501
        """
        pass

    def test_projects_project_id_members_mid_put(self):
        """Test case for projects_project_id_members_mid_put

        Update project member  # noqa: E501
        """
        pass

    def test_projects_project_id_members_post(self):
        """Test case for projects_project_id_members_post

        Create project member  # noqa: E501
        """
        pass

    def test_projects_project_id_metadatas_get(self):
        """Test case for projects_project_id_metadatas_get

        Get project metadata.  # noqa: E501
        """
        pass

    def test_projects_project_id_metadatas_meta_name_delete(self):
        """Test case for projects_project_id_metadatas_meta_name_delete

        Delete metadata of a project  # noqa: E501
        """
        pass

    def test_projects_project_id_metadatas_meta_name_get(self):
        """Test case for projects_project_id_metadatas_meta_name_get

        Get project metadata  # noqa: E501
        """
        pass

    def test_projects_project_id_metadatas_meta_name_put(self):
        """Test case for projects_project_id_metadatas_meta_name_put

        Update metadata of a project.  # noqa: E501
        """
        pass

    def test_projects_project_id_metadatas_post(self):
        """Test case for projects_project_id_metadatas_post

        Add metadata for the project.  # noqa: E501
        """
        pass

    def test_projects_project_id_scanner_candidates_get(self):
        """Test case for projects_project_id_scanner_candidates_get

        Get scanner registration candidates for configurating project level scanner  # noqa: E501
        """
        pass

    def test_projects_project_id_scanner_get(self):
        """Test case for projects_project_id_scanner_get

        Get project level scanner  # noqa: E501
        """
        pass

    def test_projects_project_id_webhook_events_get(self):
        """Test case for projects_project_id_webhook_events_get

        Get supported event types and notify types.  # noqa: E501
        """
        pass

    def test_projects_project_id_webhook_jobs_get(self):
        """Test case for projects_project_id_webhook_jobs_get

        List project webhook jobs  # noqa: E501
        """
        pass

    def test_projects_project_id_webhook_lasttrigger_get(self):
        """Test case for projects_project_id_webhook_lasttrigger_get

        Get project webhook policy last trigger info  # noqa: E501
        """
        pass

    def test_projects_project_id_webhook_policies_get(self):
        """Test case for projects_project_id_webhook_policies_get

        List project webhook policies.  # noqa: E501
        """
        pass

    def test_projects_project_id_webhook_policies_policy_id_delete(self):
        """Test case for projects_project_id_webhook_policies_policy_id_delete

        Delete webhook policy of a project  # noqa: E501
        """
        pass

    def test_projects_project_id_webhook_policies_policy_id_get(self):
        """Test case for projects_project_id_webhook_policies_policy_id_get

        Get project webhook policy  # noqa: E501
        """
        pass

    def test_projects_project_id_webhook_policies_policy_id_put(self):
        """Test case for projects_project_id_webhook_policies_policy_id_put

        Update webhook policy of a project.  # noqa: E501
        """
        pass

    def test_projects_project_id_webhook_policies_post(self):
        """Test case for projects_project_id_webhook_policies_post

        Create project webhook policy.  # noqa: E501
        """
        pass

    def test_projects_project_id_webhook_policies_test_post(self):
        """Test case for projects_project_id_webhook_policies_test_post

        Test project webhook connection  # noqa: E501
        """
        pass

    def test_quotas_get(self):
        """Test case for quotas_get

        List quotas  # noqa: E501
        """
        pass

    def test_quotas_id_get(self):
        """Test case for quotas_id_get

        Get the specified quota  # noqa: E501
        """
        pass

    def test_quotas_id_put(self):
        """Test case for quotas_id_put

        Update the specified quota  # noqa: E501
        """
        pass

    def test_registries_get(self):
        """Test case for registries_get

        List registries.  # noqa: E501
        """
        pass

    def test_registries_id_delete(self):
        """Test case for registries_id_delete

        Delete specific registry.  # noqa: E501
        """
        pass

    def test_registries_id_get(self):
        """Test case for registries_id_get

        Get registry.  # noqa: E501
        """
        pass

    def test_registries_id_info_get(self):
        """Test case for registries_id_info_get

        Get registry info.  # noqa: E501
        """
        pass

    def test_registries_id_namespace_get(self):
        """Test case for registries_id_namespace_get

        List namespaces of registry  # noqa: E501
        """
        pass

    def test_registries_id_put(self):
        """Test case for registries_id_put

        Update a given registry.  # noqa: E501
        """
        pass

    def test_registries_ping_post(self):
        """Test case for registries_ping_post

        Ping status of a registry.  # noqa: E501
        """
        pass

    def test_registries_post(self):
        """Test case for registries_post

        Create a new registry.  # noqa: E501
        """
        pass

    def test_replication_adapters_get(self):
        """Test case for replication_adapters_get

        List supported adapters.  # noqa: E501
        """
        pass

    def test_replication_policies_get(self):
        """Test case for replication_policies_get

        List replication policies  # noqa: E501
        """
        pass

    def test_replication_policies_id_delete(self):
        """Test case for replication_policies_id_delete

        Delete the replication policy specified by ID.  # noqa: E501
        """
        pass

    def test_replication_policies_id_get(self):
        """Test case for replication_policies_id_get

        Get replication policy.  # noqa: E501
        """
        pass

    def test_replication_policies_id_put(self):
        """Test case for replication_policies_id_put

        Update the replication policy  # noqa: E501
        """
        pass

    def test_replication_policies_post(self):
        """Test case for replication_policies_post

        Create a replication policy  # noqa: E501
        """
        pass

    def test_scanners_get(self):
        """Test case for scanners_get

        List scanner registrations  # noqa: E501
        """
        pass

    def test_scanners_ping_post(self):
        """Test case for scanners_ping_post

        Tests scanner registration settings  # noqa: E501
        """
        pass

    def test_scanners_registration_id_get(self):
        """Test case for scanners_registration_id_get

        Get a scanner registration details  # noqa: E501
        """
        pass

    def test_scanners_registration_id_metadata_get(self):
        """Test case for scanners_registration_id_metadata_get

        Get the metadata of the specified scanner registration  # noqa: E501
        """
        pass

    def test_search_get(self):
        """Test case for search_get

        Search for projects, repositories and helm charts  # noqa: E501
        """
        pass

    def test_statistics_get(self):
        """Test case for statistics_get

        Get projects number and repositories number relevant to the user  # noqa: E501
        """
        pass

    def test_system_cve_allowlist_get(self):
        """Test case for system_cve_allowlist_get

        Get the system level allowlist of CVE.  # noqa: E501
        """
        pass

    def test_system_cve_allowlist_put(self):
        """Test case for system_cve_allowlist_put

        Update the system level allowlist of CVE.  # noqa: E501
        """
        pass

    def test_system_oidc_ping_post(self):
        """Test case for system_oidc_ping_post

        Test the OIDC endpoint.  # noqa: E501
        """
        pass

    def test_usergroups_get(self):
        """Test case for usergroups_get

        Get all user groups information  # noqa: E501
        """
        pass

    def test_usergroups_group_id_delete(self):
        """Test case for usergroups_group_id_delete

        Delete user group  # noqa: E501
        """
        pass

    def test_usergroups_group_id_get(self):
        """Test case for usergroups_group_id_get

        Get user group information  # noqa: E501
        """
        pass

    def test_usergroups_group_id_put(self):
        """Test case for usergroups_group_id_put

        Update group information  # noqa: E501
        """
        pass

    def test_usergroups_post(self):
        """Test case for usergroups_post

        Create user group  # noqa: E501
        """
        pass

    def test_users_current_get(self):
        """Test case for users_current_get

        Get current user info.  # noqa: E501
        """
        pass

    def test_users_current_permissions_get(self):
        """Test case for users_current_permissions_get

        Get current user permissions.  # noqa: E501
        """
        pass

    def test_users_get(self):
        """Test case for users_get

        Get registered users of Harbor.  # noqa: E501
        """
        pass

    def test_users_post(self):
        """Test case for users_post

        Creates a new user account.  # noqa: E501
        """
        pass

    def test_users_search_get(self):
        """Test case for users_search_get

        Search users by username  # noqa: E501
        """
        pass

    def test_users_user_id_cli_secret_put(self):
        """Test case for users_user_id_cli_secret_put

        Set CLI secret for a user.  # noqa: E501
        """
        pass

    def test_users_user_id_delete(self):
        """Test case for users_user_id_delete

        Mark a registered user as be removed.  # noqa: E501
        """
        pass

    def test_users_user_id_get(self):
        """Test case for users_user_id_get

        Get a user's profile.  # noqa: E501
        """
        pass

    def test_users_user_id_password_put(self):
        """Test case for users_user_id_password_put

        Change the password on a user that already exists.  # noqa: E501
        """
        pass

    def test_users_user_id_put(self):
        """Test case for users_user_id_put

        Update a registered user to change his profile.  # noqa: E501
        """
        pass

    def test_users_user_id_sysadmin_put(self):
        """Test case for users_user_id_sysadmin_put

        Update a registered user to change to be an administrator of Harbor.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
