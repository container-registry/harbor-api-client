info:
  version: '2.0'
  description: These APIs provide services for manipulating Harbor project.
  title: Harbor API
paths:
  '/projects/{project_name}/preheat/providers':
    get:
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/ProviderUnderProject'
            type: array
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
      tags:
        - preheat
      operationId: ListProvidersUnderProject
      summary: Get all providers at project level
      description: Get all providers at project level
  '/projects/{project_name}/repositories':
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of repositories
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Success
          schema:
            items:
              $ref: '#/definitions/Repository'
            type: array
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/query'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
      tags:
        - repository
      operationId: listRepositories
      summary: List repositories
      description: List repositories of the specified project
  /system/gc/schedule:
    put:
      responses:
        '200':
          description: Updated gc's schedule successfully.
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - required: true
          in: body
          description: Updates of gc's schedule.
          name: schedule
          schema:
            $ref: '#/definitions/Schedule'
      tags:
        - gc
      operationId: updateGCSchedule
      summary: Update gc's schedule.
      description: |
        This endpoint is for update gc schedule.
    post:
      responses:
        '201':
          $ref: '#/responses/201'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
      parameters:
        - required: true
          in: body
          description: Updates of gc's schedule.
          name: schedule
          schema:
            $ref: '#/definitions/Schedule'
      tags:
        - gc
      operationId: createGCSchedule
      summary: Create a gc schedule.
      description: |
        This endpoint is for update gc schedule.
    get:
      description: This endpoint is for get schedule of gc job.
      tags:
        - gc
      summary: Get gc's schedule.
      responses:
        '200':
          description: Get gc's schedule.
          schema:
            $ref: '#/definitions/GCHistory'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      operationId: getGCSchedule
  /scans/all/metrics:
    get:
      description: Get the metrics of the latest scan all process
      tags:
        - scanAll
      summary: Get the metrics of the latest scan all process
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stats'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
      operationId: getLatestScanAllMetrics
  /p2p/preheat/instances:
    post:
      responses:
        '201':
          $ref: '#/responses/201'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - required: true
          in: body
          description: The JSON object of instance.
          name: instance
          schema:
            $ref: '#/definitions/Instance'
      tags:
        - preheat
      operationId: CreateInstance
      summary: Create p2p provider instances
      description: Create p2p provider instances
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of preheating provider instances
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Success
          schema:
            items:
              $ref: '#/definitions/Instance'
            type: array
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/query'
      tags:
        - preheat
      operationId: ListInstances
      summary: List P2P provider instances
      description: List P2P provider instances
  '/projects/{project_name_or_id}/robots/{robot_id}':
    put:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/isResourceName'
        - $ref: '#/parameters/projectNameOrId'
        - $ref: '#/parameters/robotId'
        - required: true
          in: body
          description: The JSON object of a robot account.
          name: robot
          schema:
            $ref: '#/definitions/Robot'
      tags:
        - robotv1
      operationId: UpdateRobotV1
      summary: Update status of robot account.
      description: Used to disable/enable a specified robot account.
    get:
      responses:
        '200':
          description: Return matched robot information.
          schema:
            $ref: '#/definitions/Robot'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/isResourceName'
        - $ref: '#/parameters/projectNameOrId'
        - $ref: '#/parameters/robotId'
      tags:
        - robotv1
      operationId: GetRobotByIDV1
      summary: Get a robot account
      description: This endpoint returns specific robot account information by robot ID.
    delete:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/isResourceName'
        - $ref: '#/parameters/projectNameOrId'
        - $ref: '#/parameters/robotId'
      tags:
        - robotv1
      operationId: DeleteRobotV1
      summary: Delete a robot account
      description: This endpoint deletes specific robot account information by robot ID.
  '/replication/executions/{id}':
    put:
      responses:
        '200':
          $ref: '#/responses/200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - in: path
          description: The ID of the execution.
          format: int64
          required: true
          type: integer
          name: id
      tags:
        - replication
      operationId: stopReplication
      summary: Stop the specific replication execution
      description: Stop the replication execution specified by ID
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReplicationExecution'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - in: path
          description: The ID of the execution.
          format: int64
          required: true
          type: integer
          name: id
      tags:
        - replication
      operationId: getReplicationExecution
      summary: Get the specific replication execution
      description: Get the replication execution specified by ID
  /robots:
    post:
      responses:
        '201':
          headers:
            X-Request-Id:
              type: string
              description: The ID of the corresponding request for the response
            Location:
              type: string
              description: The location of the resource
          description: Created
          schema:
            $ref: '#/definitions/RobotCreated'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - required: true
          in: body
          description: The JSON object of a robot account.
          name: robot
          schema:
            $ref: '#/definitions/RobotCreate'
      tags:
        - robot
      operationId: CreateRobot
      summary: Create a robot account
      description: Create a robot account
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of robot accounts
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Success
          schema:
            items:
              $ref: '#/definitions/Robot'
            type: array
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/query'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
      tags:
        - robot
      operationId: ListRobot
      summary: Get robot account
      description: List the robot accounts with the specified level and project.
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags/{tag_name}':
    delete:
      responses:
        '200':
          $ref: '#/responses/200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/reference'
        - $ref: '#/parameters/tagName'
      tags:
        - artifact
      operationId: deleteTag
      summary: Delete tag
      description: Delete the tag of the specified artifact
  '/projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks/{task_id}/logs':
    get:
      responses:
        '200':
          headers:
            Content-Type:
              type: string
              description: Content type of response
          description: Get log success
          schema:
            type: string
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/preheatPolicyName'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/taskId'
      tags:
        - preheat
      operationId: GetPreheatLog
      produces:
        - text/plain
      summary: Get the log text stream of the specified task for the given execution
      description: Get the log text stream of the specified task for the given execution
  '/projects/{project_name}/repositories/{repository_name}/artifacts':
    post:
      responses:
        '201':
          $ref: '#/responses/201'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '405':
          $ref: '#/responses/405'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - required: true
          type: string
          description: 'The artifact from which the new artifact is copied from, the format should be "project/repository:tag" or "project/repository@digest".'
          in: query
          name: from
      tags:
        - artifact
      operationId: CopyArtifact
      summary: Copy artifact
      description: Copy the artifact specified in the "from" parameter to the repository.
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of artifacts
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Success
          schema:
            items:
              $ref: '#/definitions/Artifact'
            type: array
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/query'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/acceptVulnerabilities'
        - description: Specify whether the tags are included inside the returning artifacts
          in: query
          default: true
          required: false
          type: boolean
          name: with_tag
        - description: Specify whether the labels are included inside the returning artifacts
          in: query
          default: false
          required: false
          type: boolean
          name: with_label
        - description: Specify whether the scan overview is included inside the returning artifacts
          in: query
          default: false
          required: false
          type: boolean
          name: with_scan_overview
        - description: Specify whether the signature is included inside the tags of the returning artifacts. Only works when setting "with_tag=true"
          in: query
          default: false
          required: false
          type: boolean
          name: with_signature
        - description: Specify whether the immutable status is included inside the tags of the returning artifacts. Only works when setting "with_tag=true"
          in: query
          default: false
          required: false
          type: boolean
          name: with_immutable_status
      tags:
        - artifact
      operationId: listArtifacts
      summary: List artifacts
      description: 'List artifacts under the specific project and repository. Except the basic properties, the other supported queries in "q" includes "tags=*" to list only tagged artifacts, "tags=nil" to list only untagged artifacts, "tags=~v" to list artifacts whose tag fuzzy matches "v", "tags=v" to list artifact whose tag exactly matches "v", "labels=(id1, id2)" to list artifacts that both labels with id1 and id2 are added to'
  /system/gc:
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of history
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Get gc results successfully.
          schema:
            items:
              $ref: '#/definitions/GCHistory'
            type: array
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/query'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
      tags:
        - gc
      operationId: getGCHistory
      summary: Get gc results.
      description: This endpoint let user get gc execution history.
  '/system/gc/{gc_id}/log':
    get:
      responses:
        '200':
          description: Get successfully.
          schema:
            type: string
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/gcId'
      produces:
        - text/plain
      operationId: getGCLog
      tags:
        - gc
      summary: Get gc job log.
      description: This endpoint let user get gc job logs filtered by specific ID.
  '/icons/{digest}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Icon'
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/digest'
      tags:
        - icon
      operationId: getIcon
      summary: Get artifact icon
      description: 'Get the artifact icon with the specified digest. As the original icon image is resized and encoded before returning, the parameter "digest" in the path doesn''t match the hash of the returned content'
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels':
    post:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/reference'
        - required: true
          in: body
          description: The label that added to the artifact. Only the ID property is needed.
          name: label
          schema:
            $ref: '#/definitions/Label'
      tags:
        - artifact
      operationId: addLabel
      summary: Add label to artifact
      description: Add label to the specified artiact.
  /scans/schedule/metrics:
    get:
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stats'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
      tags:
        - scanAll
      operationId: getLatestScheduledScanAllMetrics
      deprecated: true
      summary: Get the metrics of the latest scheduled scan all process
      description: Get the metrics of the latest scheduled scan all process
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Artifact'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/reference'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/acceptVulnerabilities'
        - description: Specify whether the tags are inclued inside the returning artifacts
          in: query
          default: true
          required: false
          type: boolean
          name: with_tag
        - description: Specify whether the labels are inclued inside the returning artifacts
          in: query
          default: false
          required: false
          type: boolean
          name: with_label
        - description: Specify whether the scan overview is inclued inside the returning artifacts
          in: query
          default: false
          required: false
          type: boolean
          name: with_scan_overview
        - description: Specify whether the signature is inclued inside the returning artifacts
          in: query
          default: false
          required: false
          type: boolean
          name: with_signature
        - description: Specify whether the immutable status is inclued inside the tags of the returning artifacts. Only works when setting "with_tag=true"
          in: query
          default: false
          required: false
          type: boolean
          name: with_immutable_status
      tags:
        - artifact
      operationId: getArtifact
      summary: Get the specific artifact
      description: Get the artifact specified by the reference under the project and repository. The reference can be digest or tag.
    delete:
      responses:
        '200':
          $ref: '#/responses/200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/reference'
      tags:
        - artifact
      operationId: deleteArtifact
      summary: Delete the specific artifact
      description: Delete the artifact specified by the reference under the project and repository. The reference can be digest or tag
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan':
    post:
      responses:
        '202':
          $ref: '#/responses/202'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/reference'
      tags:
        - scan
      operationId: scanArtifact
      summary: Scan the artifact
      description: Scan the specified artifact
  /replication/executions:
    post:
      responses:
        '201':
          $ref: '#/responses/201'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - required: true
          in: body
          description: The ID of policy that the execution belongs to
          name: execution
          schema:
            $ref: '#/definitions/StartReplicationExecution'
      tags:
        - replication
      operationId: startReplication
      summary: Start one replication execution
      description: Start one replication execution according to the policy
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of the resources
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Success
          schema:
            items:
              $ref: '#/definitions/ReplicationExecution'
            type: array
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
        - required: false
          type: integer
          description: The ID of the policy that the executions belong to.
          in: query
          name: policy_id
        - required: false
          type: string
          description: The execution status.
          in: query
          name: status
        - required: false
          type: string
          description: The trigger mode.
          in: query
          name: trigger
      tags:
        - replication
      operationId: listReplicationExecutions
      summary: List replication executions
      description: List replication executions
  /p2p/preheat/providers:
    get:
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Metadata'
            type: array
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
      tags:
        - preheat
      operationId: ListProviders
      summary: List P2P providers
      description: List P2P providers
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan/{report_id}/log':
    get:
      responses:
        '200':
          description: Successfully get scan log file
          schema:
            type: string
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/reference'
        - required: true
          type: string
          description: The report id to get the log
          in: path
          name: report_id
      tags:
        - scan
      operationId: getReportLog
      produces:
        - text/plain
      summary: Get the log of the scan report
      description: Get the log of the scan report
  '/projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks':
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of tasks
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: List tasks success
          schema:
            items:
              $ref: '#/definitions/Task'
            type: array
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/preheatPolicyName'
        - $ref: '#/parameters/executionId'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/query'
      tags:
        - preheat
      operationId: ListTasks
      summary: List all the related tasks for the given execution
      description: List all the related tasks for the given execution
  '/projects/{project_name}/preheat/policies':
    post:
      responses:
        '201':
          $ref: '#/responses/201'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - required: true
          in: body
          description: The policy schema info
          name: policy
          schema:
            $ref: '#/definitions/PreheatPolicy'
      tags:
        - preheat
      operationId: CreatePolicy
      summary: Create a preheat policy under a project
      description: Create a preheat policy under a project
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of policies
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: List preheat policies success
          schema:
            items:
              $ref: '#/definitions/PreheatPolicy'
            type: array
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/query'
      tags:
        - preheat
      operationId: ListPolicies
      summary: List preheat policies
      description: List preheat policies
  '/projects/{project_name}/preheat/policies/{preheat_policy_name}/executions':
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of executions
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: List executions success
          schema:
            items:
              $ref: '#/definitions/Execution'
            type: array
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/preheatPolicyName'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/query'
      tags:
        - preheat
      operationId: ListExecutions
      summary: List executions for the given policy
      description: List executions for the given policy
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels/{label_id}':
    delete:
      responses:
        '200':
          $ref: '#/responses/200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/reference'
        - in: path
          description: The ID of the label that removed from the artifact.
          format: int64
          required: true
          type: integer
          name: label_id
      tags:
        - artifact
      operationId: removeLabel
      summary: Remove label from artifact
      description: Remove the label from the specified artiact.
  '/projects/{project_name}/logs':
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of auditlogs
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Success
          schema:
            items:
              $ref: '#/definitions/AuditLog'
            type: array
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/query'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
      tags:
        - project
      operationId: getLogs
      summary: Get recent logs of the projects
      description: Get recent logs of the projects
  '/projects/{project_name_or_id}':
    put:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/isResourceName'
        - $ref: '#/parameters/projectNameOrId'
        - required: true
          in: body
          description: Updates of project.
          name: project
          schema:
            $ref: '#/definitions/ProjectReq'
      tags:
        - project
      operationId: updateProject
      summary: Update properties for a selected project.
      description: This endpoint is aimed to update the properties of a project.
    get:
      responses:
        '200':
          description: Return matched project information.
          schema:
            $ref: '#/definitions/Project'
        '401':
          $ref: '#/responses/401'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/isResourceName'
        - $ref: '#/parameters/projectNameOrId'
      tags:
        - project
      operationId: getProject
      summary: Return specific project detail information
      description: This endpoint returns specific project information by project ID.
    delete:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/isResourceName'
        - $ref: '#/parameters/projectNameOrId'
      tags:
        - project
      operationId: deleteProject
      summary: Delete project by projectID
      description: This endpoint is aimed to delete project by project ID.
  /system/scanAll/schedule:
    put:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
      parameters:
        - required: true
          in: body
          description: 'Updates the schedule of scan all job, which scans all of images in Harbor.'
          name: schedule
          schema:
            $ref: '#/definitions/Schedule'
      tags:
        - scanAll
      operationId: updateScanAllSchedule
      summary: Update scan all's schedule.
      description: 'This endpoint is for updating the schedule of scan all job, which scans all of images in Harbor.'
    post:
      responses:
        '201':
          $ref: '#/responses/201'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '409':
          $ref: '#/responses/409'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
      parameters:
        - required: true
          in: body
          description: Create a schedule or a manual trigger for the scan all job.
          name: schedule
          schema:
            $ref: '#/definitions/Schedule'
      tags:
        - scanAll
      operationId: createScanAllSchedule
      summary: Create a schedule or a manual trigger for the scan all job.
      description: 'This endpoint is for creating a schedule or a manual trigger for the scan all job, which scans all of images in Harbor.'
    get:
      description: 'This endpoint is for getting a schedule for the scan all job, which scans all of images in Harbor.'
      tags:
        - scanAll
      summary: Get scan all's schedule.
      responses:
        '200':
          description: 'Get a schedule for the scan all job, which scans all of images in Harbor.'
          schema:
            $ref: '#/definitions/Schedule'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '412':
          $ref: '#/responses/412'
        '500':
          $ref: '#/responses/500'
      operationId: getScanAllSchedule
  '/retentions/{id}/executions/{eid}':
    patch:
      responses:
        '200':
          description: Stop a Retention job successfully.
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - in: path
          description: Retention ID.
          format: int64
          required: true
          type: integer
          name: id
        - in: path
          description: Retention execution ID.
          format: int64
          required: true
          type: integer
          name: eid
        - required: true
          in: body
          description: 'The action, only support "stop" now.'
          name: body
          schema:
            type: object
            properties:
              action:
                type: string
      tags:
        - Retention
      operationId: operateRetentionExecution
      summary: Stop a Retention execution
      description: 'Stop a Retention execution, only support "stop" action now.'
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/vulnerabilities':
    get:
      responses:
        '200':
          headers:
            Content-Type:
              type: string
              description: The content type of the vulnerabilities addition
          description: Success
          schema:
            type: string
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/reference'
        - $ref: '#/parameters/acceptVulnerabilities'
      tags:
        - artifact
      operationId: getVulnerabilitiesAddition
      summary: Get the vulnerabilities addition of the specific artifact
      description: Get the vulnerabilities addition of the artifact specified by the reference under the project and repository.
  '/system/gc/{gc_id}':
    get:
      responses:
        '200':
          description: Get gc results successfully.
          schema:
            $ref: '#/definitions/GCHistory'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/gcId'
      tags:
        - gc
      operationId: getGC
      summary: Get gc status.
      description: This endpoint let user get gc status filtered by specific ID.
  '/retentions/{id}/executions/{eid}/tasks':
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of available items
            Link:
              type: string
              description: Link to previous page and next page
          description: Get Retention job tasks successfully.
          schema:
            items:
              type: object
              $ref: '#/definitions/RetentionExecutionTask'
            type: array
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - in: path
          description: Retention ID.
          format: int64
          required: true
          type: integer
          name: id
        - in: path
          description: Retention execution ID.
          format: int64
          required: true
          type: integer
          name: eid
        - in: query
          description: The page number.
          format: int64
          required: false
          type: integer
          name: page
        - in: query
          description: The size of per page.
          format: int64
          required: false
          type: integer
          name: page_size
      tags:
        - Retention
      operationId: listRetentionTasks
      summary: Get Retention tasks
      description: 'Get Retention tasks, each repository as a task.'
  '/projects/{project_name_or_id}/summary':
    get:
      responses:
        '200':
          description: Get summary of the project successfully.
          schema:
            $ref: '#/definitions/ProjectSummary'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/isResourceName'
        - $ref: '#/parameters/projectNameOrId'
      tags:
        - project
      operationId: getProjectSummary
      summary: Get summary of the project.
      description: Get summary of the project.
  /audit-logs:
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of auditlogs
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Success
          schema:
            items:
              $ref: '#/definitions/AuditLog'
            type: array
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/query'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
      tags:
        - auditlog
      operationId: listAuditLogs
      summary: Get recent logs of the projects which the user is a member of
      description: |
        This endpoint let user see the recent operation logs of the projects which he is member of
  /retentions/metadatas:
    get:
      description: Get Retention Metadatas.
      tags:
        - Retention
      summary: Get Retention Metadatas
      responses:
        '200':
          description: Get Retention Metadatas successfully.
          schema:
            $ref: '#/definitions/RetentionMetadata'
      operationId: getRentenitionMetadata
  /systeminfo/volumes:
    get:
      description: |
        This endpoint is for retrieving system volume info that only provides for admin user.  Note that the response only reflects the storage status of local disk.
      summary: Get system volume info (total/free size).
      responses:
        '200':
          description: Get system volumes successfully.
          schema:
            $ref: '#/definitions/SystemInfo'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      tags:
        - systeminfo
  /systeminfo/getcert:
    get:
      description: |
        This endpoint is for downloading a default root certificate.
      tags:
        - systeminfo
      summary: Get default root certificate.
      responses:
        '200':
          headers:
            Content-Disposition:
              type: string
              description: To set the filename of the downloaded file.
          description: Get default root certificate successfully.
          schema:
            type: file
        '404':
          description: Not found the default root certificate.
        '500':
          $ref: '#/responses/500'
      produces:
        - application/octet-stream
  '/robots/{robot_id}':
    put:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/robotId'
        - required: true
          in: body
          description: The JSON object of a robot account.
          name: robot
          schema:
            $ref: '#/definitions/Robot'
      tags:
        - robot
      operationId: UpdateRobot
      summary: Update a robot account
      description: This endpoint updates specific robot account information by robot ID.
    get:
      responses:
        '200':
          description: Return matched robot information.
          schema:
            $ref: '#/definitions/Robot'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/robotId'
      tags:
        - robot
      operationId: GetRobotByID
      summary: Get a robot account
      description: This endpoint returns specific robot account information by robot ID.
    patch:
      responses:
        '200':
          description: Return refreshed robot sec.
          schema:
            $ref: '#/definitions/RobotSec'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/robotId'
        - description: The JSON object of a robot account.
          required: true
          in: body
          name: robotSec
          schema:
            $ref: '#/definitions/RobotSec'
      tags:
        - robot
      operationId: RefreshSec
      summary: Refresh the robot secret
      description: Refresh the robot secret
    delete:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/robotId'
      tags:
        - robot
      operationId: DeleteRobot
      summary: Delete a robot account
      description: This endpoint deletes specific robot account information by robot ID.
  '/replication/executions/{id}/tasks':
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of the resources
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Success
          schema:
            items:
              $ref: '#/definitions/ReplicationTask'
            type: array
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
        - in: path
          description: The ID of the execution that the tasks belongs to.
          format: int64
          required: true
          type: integer
          name: id
        - required: false
          type: string
          description: The task status.
          in: query
          name: status
        - required: false
          type: string
          description: The resource type.
          in: query
          name: resource_type
      tags:
        - replication
      operationId: listReplicationTasks
      summary: List replication tasks for a specific execution
      description: List replication tasks for a specific execution
  '/projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}':
    get:
      responses:
        '200':
          description: Get execution success
          schema:
            $ref: '#/definitions/Execution'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/preheatPolicyName'
        - $ref: '#/parameters/executionId'
      tags:
        - preheat
      operationId: GetExecution
      summary: Get a execution detail by id
      description: Get a execution detail by id
    patch:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/preheatPolicyName'
        - $ref: '#/parameters/executionId'
        - description: The data of execution
          required: true
          in: body
          name: execution
          schema:
            $ref: '#/definitions/Execution'
      tags:
        - preheat
      operationId: StopExecution
      summary: Stop a execution
      description: Stop a execution
  '/retentions/{id}/executions/{eid}/tasks/{tid}':
    get:
      responses:
        '200':
          description: Get Retention job task log successfully.
          schema:
            type: string
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - in: path
          description: Retention ID.
          format: int64
          required: true
          type: integer
          name: id
        - in: path
          description: Retention execution ID.
          format: int64
          required: true
          type: integer
          name: eid
        - in: path
          description: Retention execution ID.
          format: int64
          required: true
          type: integer
          name: tid
      produces:
        - text/plain
      operationId: getRetentionTaskLog
      tags:
        - Retention
      summary: Get Retention job task log
      description: 'Get Retention job task log, tags ratain or deletion detail will be shown in a table.'
  /p2p/preheat/instances/ping:
    post:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '404':
          description: Instance not found (when instance is provided by ID).
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - required: true
          in: body
          description: The JSON object of instance.
          name: instance
          schema:
            $ref: '#/definitions/Instance'
      tags:
        - preheat
      operationId: PingInstances
      summary: Ping status of a instance.
      description: |
        This endpoint checks status of a instance, the instance can be given by ID or Endpoint URL (together with credential)
  /retentions:
    post:
      responses:
        '201':
          $ref: '#/responses/201'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - required: true
          in: body
          description: Create Retention Policy successfully.
          name: policy
          schema:
            $ref: '#/definitions/RetentionPolicy'
      tags:
        - Retention
      operationId: createRetention
      summary: Create Retention Policy
      description: 'Create Retention Policy, you can reference metadatas API for the policy model. You can check project metadatas to find whether a retention policy is already binded. This method should only be called when no retention policy binded to project yet.'
  /projects:
    head:
      responses:
        '200':
          $ref: '#/responses/200'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - required: true
          type: string
          description: Project name for checking exists.
          in: query
          name: project_name
      tags:
        - project
      operationId: headProject
      summary: Check if the project name user provided already exists.
      description: This endpoint is used to check if the project name provided already exist.
    post:
      responses:
        '201':
          $ref: '#/responses/201'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/resourceNameInLocation'
        - required: true
          in: body
          description: New created project.
          name: project
          schema:
            $ref: '#/definitions/ProjectReq'
      tags:
        - project
      operationId: createProject
      summary: Create a new project.
      description: This endpoint is for user to create a new project.
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of projects
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Return all matched projects.
          schema:
            items:
              $ref: '#/definitions/Project'
            type: array
        '401':
          $ref: '#/responses/401'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
        - required: false
          type: string
          description: The name of project.
          in: query
          name: name
        - in: query
          description: The project is public or private.
          format: int32
          required: false
          type: boolean
          name: public
        - required: false
          type: string
          description: The name of project owner.
          in: query
          name: owner
        - description: Bool value indicating whether return detailed information of the project
          in: query
          default: true
          required: false
          type: boolean
          name: with_detail
      tags:
        - project
      operationId: listProjects
      summary: List projects
      description: This endpoint returns projects created by Harbor.
  '/projects/{project_name}/repositories/{repository_name}':
    put:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - required: true
          in: body
          description: The JSON object of repository.
          name: repository
          schema:
            $ref: '#/definitions/Repository'
      tags:
        - repository
      operationId: updateRepository
      summary: Update repository
      description: Update the repository specified by name
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Repository'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
      tags:
        - repository
      operationId: getRepository
      summary: Get repository
      description: Get the repository specified by name
    delete:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
      tags:
        - repository
      operationId: deleteRepository
      summary: Delete repository
      description: Delete the repository specified by name
  '/retentions/{id}/executions':
    post:
      responses:
        '200':
          description: Trigger a Retention job successfully.
        '201':
          $ref: '#/responses/201'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - in: path
          description: Retention ID.
          format: int64
          required: true
          type: integer
          name: id
        - required: true
          in: body
          name: body
          schema:
            type: object
            properties:
              dry_run:
                type: boolean
      produces:
        - text/plain
      operationId: triggerRetentionExecution
      tags:
        - Retention
      summary: Trigger a Retention Execution
      description: 'Trigger a Retention Execution, if dry_run is True, nothing would be deleted actually.'
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of available items
            Link:
              type: string
              description: Link to previous page and next page
          description: Get a Retention execution successfully.
          schema:
            items:
              type: object
              $ref: '#/definitions/RetentionExecution'
            type: array
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - in: path
          description: Retention ID.
          format: int64
          required: true
          type: integer
          name: id
        - in: query
          description: The page number.
          format: int64
          required: false
          type: integer
          name: page
        - in: query
          description: The size of per page.
          format: int64
          required: false
          type: integer
          name: page_size
      tags:
        - Retention
      operationId: listRetentionExecutions
      summary: Get Retention executions
      description: 'Get Retention executions, execution status may be delayed before job service schedule it up.'
  '/projects/{project_name_or_id}/robots':
    post:
      responses:
        '201':
          headers:
            X-Request-Id:
              type: string
              description: The ID of the corresponding request for the response
            Location:
              type: string
              description: The location of the resource
          description: Created
          schema:
            $ref: '#/definitions/RobotCreated'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/isResourceName'
        - $ref: '#/parameters/projectNameOrId'
        - required: true
          in: body
          description: The JSON object of a robot account.
          name: robot
          schema:
            $ref: '#/definitions/RobotCreateV1'
      tags:
        - robotv1
      operationId: CreateRobotV1
      summary: Create a robot account
      description: Create a robot account
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of robot accounts
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Success
          schema:
            items:
              $ref: '#/definitions/Robot'
            type: array
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/isResourceName'
        - $ref: '#/parameters/projectNameOrId'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
        - $ref: '#/parameters/query'
      tags:
        - robotv1
      operationId: ListRobotV1
      summary: Get all robot accounts of specified project
      description: Get all robot accounts of specified project
  '/retentions/{id}':
    put:
      responses:
        '200':
          description: Update Retention Policy successfully.
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - in: path
          description: Retention ID.
          format: int64
          required: true
          type: integer
          name: id
        - required: true
          in: body
          name: policy
          schema:
            $ref: '#/definitions/RetentionPolicy'
      tags:
        - Retention
      operationId: updateRetention
      summary: Update Retention Policy
      description: 'Update Retention Policy, you can reference metadatas API for the policy model. You can check project metadatas to find whether a retention policy is already binded. This method should only be called when retention policy has already binded to project.'
    get:
      responses:
        '200':
          description: Get Retention Policy successfully.
          schema:
            $ref: '#/definitions/RetentionPolicy'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
      parameters:
        - in: path
          description: Retention ID.
          format: int64
          required: true
          type: integer
          name: id
      tags:
        - Retention
      operationId: getRetention
      summary: Get Retention Policy
      description: Get Retention Policy.
  /systeminfo:
    get:
      description: |
        This API is for retrieving general system info, this can be called by anonymous request.  Some attributes will be omitted in the response when this API is called by anonymous request.
      summary: Get general system info
      responses:
        '200':
          description: Get general info successfully.
          schema:
            $ref: '#/definitions/GeneralInfo'
        '500':
          $ref: '#/responses/500'
      tags:
        - systeminfo
  '/p2p/preheat/instances/{preheat_instance_name}':
    put:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/instanceName'
        - required: true
          in: body
          description: The instance to update
          name: instance
          schema:
            $ref: '#/definitions/Instance'
      tags:
        - preheat
      operationId: UpdateInstance
      summary: Update the specified P2P provider instance
      description: Update the specified P2P provider instance
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Instance'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/instanceName'
      tags:
        - preheat
      operationId: GetInstance
      summary: Get a P2P provider instance
      description: Get a P2P provider instance
    delete:
      responses:
        '200':
          $ref: '#/responses/200'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/instanceName'
      tags:
        - preheat
      operationId: DeleteInstance
      summary: Delete the specified P2P provider instance
      description: Delete the specified P2P provider instance
  '/projects/{project_name}/preheat/policies/{preheat_policy_name}':
    put:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/preheatPolicyName'
        - required: true
          in: body
          description: The policy schema info
          name: policy
          schema:
            $ref: '#/definitions/PreheatPolicy'
      tags:
        - preheat
      operationId: UpdatePolicy
      summary: Update preheat policy
      description: Update preheat policy
    post:
      responses:
        '201':
          $ref: '#/responses/201'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/preheatPolicyName'
        - required: true
          in: body
          description: The policy schema info
          name: policy
          schema:
            $ref: '#/definitions/PreheatPolicy'
      tags:
        - preheat
      operationId: ManualPreheat
      summary: Manual preheat
      description: Manual preheat
    get:
      responses:
        '200':
          description: Get a preheat policy success
          schema:
            $ref: '#/definitions/PreheatPolicy'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/preheatPolicyName'
      tags:
        - preheat
      operationId: GetPolicy
      summary: Get a preheat policy
      description: Get a preheat policy
    delete:
      responses:
        '200':
          $ref: '#/responses/200'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/preheatPolicyName'
      tags:
        - preheat
      operationId: DeletePolicy
      summary: Delete a preheat policy
      description: Delete a preheat policy
  '/replication/executions/{id}/tasks/{task_id}/log':
    get:
      responses:
        '200':
          headers:
            Content-Type:
              type: string
              description: The content type of response body
          description: Success
          schema:
            type: string
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - in: path
          description: The ID of the execution that the tasks belongs to.
          format: int64
          required: true
          type: integer
          name: id
        - in: path
          description: The ID of the task.
          format: int64
          required: true
          type: integer
          name: task_id
      tags:
        - replication
      operationId: getReplicationLog
      produces:
        - text/plain
      summary: Get the log of the specific replication task
      description: Get the log of the specific replication task
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags':
    post:
      responses:
        '201':
          $ref: '#/responses/201'
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '405':
          $ref: '#/responses/405'
        '409':
          $ref: '#/responses/409'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/reference'
        - required: true
          in: body
          description: The JSON object of tag.
          name: tag
          schema:
            $ref: '#/definitions/Tag'
      tags:
        - artifact
      operationId: createTag
      summary: Create tag
      description: Create a tag for the specified artifact
    get:
      responses:
        '200':
          headers:
            X-Total-Count:
              type: integer
              description: The total count of tags
            Link:
              type: string
              description: Link refers to the previous page and next page
          description: Success
          schema:
            items:
              $ref: '#/definitions/Tag'
            type: array
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/reference'
        - $ref: '#/parameters/query'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/pageSize'
        - description: Specify whether the signature is included inside the returning tags
          in: query
          default: false
          required: false
          type: boolean
          name: with_signature
        - description: Specify whether the immutable status is included inside the returning tags
          in: query
          default: false
          required: false
          type: boolean
          name: with_immutable_status
      tags:
        - artifact
      operationId: listTags
      summary: List tags
      description: List tags of the specific artifact
  '/projects/{project_name_or_id}/_deletable':
    get:
      responses:
        '200':
          description: Return deletable status of the project.
          schema:
            $ref: '#/definitions/ProjectDeletable'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/isResourceName'
        - $ref: '#/parameters/projectNameOrId'
      tags:
        - project
      operationId: getProjectDeletable
      summary: Get the deletable status of the project
      description: Get the deletable status of the project
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/{addition}':
    get:
      responses:
        '200':
          headers:
            Content-Type:
              type: string
              description: The content type of the addition
          description: Success
          schema:
            type: string
        '400':
          $ref: '#/responses/400'
        '401':
          $ref: '#/responses/401'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
      parameters:
        - $ref: '#/parameters/requestId'
        - $ref: '#/parameters/projectName'
        - $ref: '#/parameters/repositoryName'
        - $ref: '#/parameters/reference'
        - required: true
          description: The type of addition.
          in: path
          enum:
            - build_history
            - values.yaml
            - readme.md
            - dependencies
          type: string
          name: addition
      tags:
        - artifact
      operationId: getAddition
      summary: Get the addition of the specific artifact
      description: Get the addition of the artifact specified by the reference under the project and repository.
  /ping:
    get:
      description: 'This API simply replies a pong to indicate the process to handle API is up, disregarding the health status of dependent components.'
      tags:
        - ping
      summary: Ping Harbor to check if it's alive.
      responses:
        '200':
          description: The API server is alive
          schema:
            type: string
      produces:
        - text/plain
schemes:
  - http
  - https
responses:
  '200':
    headers:
      X-Request-Id:
        type: string
        description: The ID of the corresponding request for the response
    description: Success
  '201':
    headers:
      X-Request-Id:
        type: string
        description: The ID of the corresponding request for the response
      Location:
        type: string
        description: The location of the resource
    description: Created
  '202':
    headers:
      X-Request-Id:
        type: string
        description: The ID of the corresponding request for the response
    description: Accepted
  '400':
    headers:
      X-Request-Id:
        type: string
        description: The ID of the corresponding request for the response
    description: Bad request
    schema:
      $ref: '#/definitions/Errors'
  '401':
    headers:
      X-Request-Id:
        type: string
        description: The ID of the corresponding request for the response
    description: Unauthorized
    schema:
      $ref: '#/definitions/Errors'
  '403':
    headers:
      X-Request-Id:
        type: string
        description: The ID of the corresponding request for the response
    description: Forbidden
    schema:
      $ref: '#/definitions/Errors'
  '404':
    headers:
      X-Request-Id:
        type: string
        description: The ID of the corresponding request for the response
    description: Not found
    schema:
      $ref: '#/definitions/Errors'
  '405':
    headers:
      X-Request-Id:
        type: string
        description: The ID of the corresponding request for the response
    description: Method not allowed
    schema:
      $ref: '#/definitions/Errors'
  '409':
    headers:
      X-Request-Id:
        type: string
        description: The ID of the corresponding request for the response
    description: Conflict
    schema:
      $ref: '#/definitions/Errors'
  '412':
    headers:
      X-Request-Id:
        type: string
        description: The ID of the corresponding request for the response
    description: Precondition failed
    schema:
      $ref: '#/definitions/Errors'
  '500':
    headers:
      X-Request-Id:
        type: string
        description: The ID of the corresponding request for the response
    description: Internal server error
    schema:
      $ref: '#/definitions/Errors'
parameters:
  gcId:
    in: path
    description: The ID of the gc log
    format: int64
    required: true
    type: integer
    name: gc_id
  isResourceName:
    name: X-Is-Resource-Name
    in: header
    default: false
    required: false
    type: boolean
    description: 'The flag to indicate whether the parameter which supports both name and id in the path is the name of the resource. When the X-Is-Resource-Name is false and the parameter can be converted to an integer, the parameter will be as an id, otherwise, it will be as a name.'
  tagName:
    required: true
    type: string
    description: The name of the tag
    in: path
    name: tag_name
  pageSize:
    description: The size of per page
    format: int64
    default: 10
    required: false
    maximum: 100
    in: query
    type: integer
    name: page_size
  projectName:
    required: true
    type: string
    description: The name of the project
    in: path
    name: project_name
  acceptVulnerabilities:
    default: application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0
    in: header
    type: string
    description: |-
      A comma-separated lists of MIME types for the scan report or scan summary. The first mime type will be used when the report found for it.
      Currently the mime type supports 'application/vnd.scanner.adapter.vuln.report.harbor+json; version=1.0' and 'application/vnd.security.vulnerability.report; version=1.1'
    name: X-Accept-Vulnerabilities
  executionId:
    required: true
    type: integer
    description: Execution ID
    in: path
    name: execution_id
  taskId:
    required: true
    type: integer
    description: Task ID
    in: path
    name: task_id
  query:
    description: 'Query string to query resources. Supported query patterns are "exact match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with union releationship(k={v1 v2 v3})" and "list with intersetion relationship(k=(v1 v2 v3))". The value of range and list can be string(enclosed by " or ''), integer or time(in format "2020-04-09 02:36:00"). All of these query patterns should be put in the query string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]'
    required: false
    type: string
    name: q
    in: query
  digest:
    required: true
    type: string
    description: The digest of the resource
    in: path
    name: digest
  reference:
    required: true
    type: string
    description: 'The reference of the artifact, can be digest or tag'
    in: path
    name: reference
  preheatPolicyName:
    required: true
    type: string
    description: Preheat Policy Name
    in: path
    name: preheat_policy_name
  projectNameOrId:
    required: true
    type: string
    description: The name or id of the project
    in: path
    name: project_name_or_id
  robotId:
    required: true
    type: integer
    description: Robot ID
    in: path
    name: robot_id
  requestId:
    name: X-Request-Id
    in: header
    minLength: 1
    required: false
    type: string
    description: An unique ID for the request
  resourceNameInLocation:
    name: X-Resource-Name-In-Location
    in: header
    default: false
    required: false
    type: boolean
    description: 'The flag to indicate whether to return the name of the resource in Location. When X-Resource-Name-In-Location is true, the Location will return the name of the resource.'
  repositoryName:
    required: true
    type: string
    description: 'The name of the repository. If it contains slash, encode it with URL encoding. e.g. a/b -> a%252Fb'
    in: path
    name: repository_name
  instanceName:
    required: true
    type: string
    description: Instance Name
    in: path
    name: preheat_instance_name
  page:
    in: query
    description: The page number
    format: int64
    default: 1
    required: false
    type: integer
    name: page
produces:
  - application/json
basePath: /api/v2.0
securityDefinitions:
  basic:
    type: basic
host: localhost
definitions:
  Errors:
    type: object
    description: The error array that describe the errors got during the handling of request
    properties:
      errors:
        items:
          $ref: '#/definitions/Error'
        type: array
  Error:
    type: object
    description: a model for all the error response coming from harbor
    properties:
      message:
        type: string
        description: The error message
      code:
        type: string
        description: The error code
  Access:
    type: object
    properties:
      action:
        type: string
        description: The action of the access
      resource:
        type: string
        description: The resource of the access
      effect:
        type: string
        description: The effect of the access
  Instance:
    type: object
    properties:
      status:
        type: string
        description: The health status
      endpoint:
        type: string
        description: The service endpoint of this instance
      vendor:
        type: string
        description: 'Based on which driver, identified by ID'
      description:
        type: string
        description: Description of instance
      default:
        type: boolean
        description: Whether the instance is default or not
        x-omitempty: false
      insecure:
        type: boolean
        description: Whether the instance endpoint is insecure or not
        x-omitempty: false
      enabled:
        type: boolean
        description: Whether the instance is activated or not
        x-omitempty: false
      auth_mode:
        type: string
        description: The authentication way supported
      setup_timestamp:
        type: integer
        description: The timestamp of instance setting up
        format: int64
      auth_info:
        additionalProperties:
          type: string
        type: object
        description: The auth credential data if exists
      id:
        type: integer
        description: Unique ID
      name:
        type: string
        description: Instance name
  AuthproxySetting:
    type: object
    properties:
      server_certificate:
        type: string
        description: The certificate to be pinned when connecting auth proxy.
      tokenreivew_endpoint:
        type: string
        description: 'The fully qualified URI of token review endpoint of authproxy, such as ''https://192.168.1.2:8443/tokenreview'''
      endpoint:
        type: string
        description: 'The fully qualified URI of login endpoint of authproxy, such as ''https://192.168.1.2:8443/login'''
      verify_cert:
        type: boolean
        description: The flag to determine whether Harbor should verify the certificate when connecting to the auth proxy.
      skip_search:
        type: boolean
        description: The flag to determine whether Harbor can skip search the user/group when adding him as a member.
  RobotCreated:
    type: object
    description: The response for robot account creation.
    properties:
      secret:
        type: string
        description: The secret of the robot
      creation_time:
        type: string
        description: The creation time of the robot.
        format: date-time
      id:
        type: integer
        description: The ID of the robot
        format: int64
      expires_at:
        type: integer
        description: The expiration data of the robot
        format: int64
      name:
        type: string
        description: The name of the tag
  Annotations:
    additionalProperties:
      type: string
    type: object
  Metadata:
    type: object
    properties:
      source:
        type: string
        description: source
      maintainers:
        items:
          type: string
        type: array
        description: maintainers
      version:
        type: string
        description: version
      name:
        type: string
        description: name
      id:
        type: string
        description: id
      icon:
        type: string
        description: icon
  StartReplicationExecution:
    type: object
    properties:
      policy_id:
        type: integer
        description: The ID of policy that the execution belongs to.
        format: int64
  Repository:
    type: object
    properties:
      update_time:
        type: string
        description: The update time of the repository
        format: date-time
      description:
        type: string
        description: The description of the repository
      pull_count:
        type: integer
        description: The count that the artifact inside the repository pulled
        format: int64
      creation_time:
        type: string
        description: The creation time of the repository
        format: date-time
      artifact_count:
        type: integer
        description: The count of the artifacts inside the repository
        format: int64
      project_id:
        type: integer
        description: The ID of the project that the repository belongs to
        format: int64
      id:
        type: integer
        description: The ID of the repository
        format: int64
      name:
        type: string
        description: The name of the repository
  Schedule:
    type: object
    properties:
      status:
        readOnly: true
        type: string
        description: The status of the schedule.
      update_time:
        readOnly: true
        type: string
        description: the update time of the schedule.
        format: date-time
      parameters:
        additionalProperties:
          type: object
        type: object
        description: The parameters of schedule job
      schedule:
        $ref: '#/definitions/ScheduleObj'
      creation_time:
        readOnly: true
        type: string
        description: the creation time of the schedule.
        format: date-time
      id:
        readOnly: true
        type: integer
        description: The id of the schedule.
  PreheatPolicy:
    type: object
    properties:
      provider_id:
        type: integer
        description: The ID of preheat policy provider
      description:
        type: string
        description: The Description of preheat policy
      enabled:
        type: boolean
        description: Whether the preheat policy enabled
        x-omitempty: false
      creation_time:
        type: string
        description: The Create Time of preheat policy
        format: date-time
      update_time:
        type: string
        description: The Update Time of preheat policy
        format: date-time
      trigger:
        type: string
        description: The Trigger of preheat policy
      filters:
        type: string
        description: The Filters of preheat policy
      provider_name:
        type: string
        description: The Name of preheat policy provider
      project_id:
        type: integer
        description: The ID of preheat policy project
      id:
        type: integer
        description: The ID of preheat policy
      name:
        type: string
        description: The Name of preheat policy
  Registry:
    type: object
    properties:
      status:
        type: string
        description: Health status of the registry.
      credential:
        $ref: '#/definitions/RegistryCredential'
      update_time:
        type: string
        description: The update time of the policy.
      name:
        type: string
        description: The registry name.
      url:
        type: string
        description: The registry URL string.
      insecure:
        type: boolean
        description: Whether or not the certificate will be verified when Harbor tries to access the server.
      creation_time:
        type: string
        description: The create time of the policy.
      type:
        type: string
        description: 'Type of the registry, e.g. ''harbor''.'
      id:
        type: integer
        description: The registry ID.
        format: int64
      description:
        type: string
        description: Description of the registry.
  ReplicationExecution:
    type: object
    description: The replication execution
    properties:
      status:
        type: string
        description: The status of the execution
      status_text:
        type: string
        description: The status text
        x-omitempty: false
      trigger:
        type: string
        description: The trigger mode
      start_time:
        type: string
        description: The start time
        format: date-time
      failed:
        type: integer
        description: The count of failed executions
        x-omitempty: false
      succeed:
        type: integer
        description: The count of succeed executions
        x-omitempty: false
      stopped:
        type: integer
        description: The count of stopped executions
        x-omitempty: false
      end_time:
        type: string
        description: The end time
        format: date-time
      in_progress:
        type: integer
        description: The count of in_progress executions
        x-omitempty: false
      total:
        type: integer
        description: The total count of all executions
        x-omitempty: false
      id:
        type: integer
        description: The ID of the execution
      policy_id:
        type: integer
        description: The ID if the policy that the execution belongs to
  Execution:
    type: object
    properties:
      status:
        type: string
        description: The status of execution
      status_message:
        type: string
        description: The status message of execution
      start_time:
        type: string
        description: The start time of execution
      vendor_id:
        type: integer
        description: The vendor id of execution
      metrics:
        $ref: '#/definitions/Metrics'
      trigger:
        type: string
        description: The trigger of execution
      end_time:
        type: string
        description: The end time of execution
      vendor_type:
        type: string
        description: The vendor type of execution
      extra_attrs:
        $ref: '#/definitions/ExtraAttrs'
      id:
        type: integer
        description: The ID of execution
  AdditionLink:
    type: object
    properties:
      href:
        type: string
        description: The link of the addition
      absolute:
        type: boolean
        description: Determine whether the link is an absolute URL or not
        x-omitempty: false
  Icon:
    type: object
    properties:
      content:
        type: string
        description: The base64 encoded content of the icon
      content-type:
        type: string
        description: The content type of the icon
  Task:
    type: object
    properties:
      status:
        type: string
        description: The status of task
      update_time:
        type: string
        description: The update time of task
      extra_attrs:
        $ref: '#/definitions/ExtraAttrs'
      start_time:
        type: string
        description: The start time of task
      creation_time:
        type: string
        description: The creation time of task
      end_time:
        type: string
        description: The end time of task
      run_count:
        type: integer
        description: The count of task run
        format: int32
      status_message:
        type: string
        description: The status message of task
      id:
        type: integer
        description: The ID of task
      execution_id:
        type: integer
        description: The ID of task execution
  RegistryCredential:
    type: object
    properties:
      access_key:
        type: string
        description: 'Access key, e.g. user name when credential type is ''basic''.'
      access_secret:
        type: string
        description: 'Access secret, e.g. password when credential type is ''basic''.'
      type:
        type: string
        description: 'Credential type, such as ''basic'', ''oauth''.'
  RetentionMetadata:
    type: object
    description: the tag retention metadata
    properties:
      templates:
        items:
          $ref: '#/definitions/RetentionRuleMetadata'
        type: array
        description: templates
      tag_selectors:
        items:
          $ref: '#/definitions/RetentionSelectorMetadata'
        type: array
        description: supported tag selectors
      scope_selectors:
        items:
          $ref: '#/definitions/RetentionSelectorMetadata'
        type: array
        description: supported scope selectors
  RetentionRuleParamMetadata:
    type: object
    description: rule param
    properties:
      required:
        type: boolean
      type:
        type: string
      unit:
        type: string
  GCHistory:
    type: object
    properties:
      job_status:
        type: string
        description: the status of gc job.
      update_time:
        type: string
        description: the update time of gc job.
        format: date-time
      job_parameters:
        type: string
        description: the job parameters of gc job.
      schedule:
        $ref: '#/definitions/ScheduleObj'
      deleted:
        type: boolean
        description: if gc job was deleted.
      job_kind:
        type: string
        description: the job kind of gc job.
      creation_time:
        type: string
        description: the creation time of gc job.
        format: date-time
      id:
        type: integer
        description: the id of gc job.
      job_name:
        type: string
        description: the job name of gc job.
  Project:
    type: object
    properties:
      update_time:
        type: string
        description: The update time of the project.
        format: date-time
      owner_name:
        type: string
        description: The owner name of the project.
      name:
        type: string
        description: The name of the project.
      deleted:
        type: boolean
        description: A deletion mark of the project.
      owner_id:
        type: integer
        description: The owner ID of the project always means the creator of the project.
        format: int32
      repo_count:
        type: integer
        description: The number of the repositories under this project.
      chart_count:
        type: integer
        description: The total number of charts under this project.
      creation_time:
        type: string
        description: The creation time of the project.
        format: date-time
      togglable:
        type: boolean
        description: Correspond to the UI about whether the project's publicity is  updatable (for UI)
      current_user_role_id:
        type: integer
        description: The role ID with highest permission of the current user who triggered the API (for UI).  This attribute is deprecated and will be removed in future versions.
      current_user_role_ids:
        items:
          type: integer
          format: int32
        type: array
        description: The list of role ID of the current user who triggered the API (for UI)
      cve_allowlist:
        description: The CVE allowlist of this project.
        $ref: '#/definitions/CVEAllowlist'
      project_id:
        type: integer
        description: Project ID
        format: int32
      registry_id:
        type: integer
        description: The ID of referenced registry when the project is a proxy cache project.
        format: int64
      metadata:
        description: The metadata of the project.
        $ref: '#/definitions/ProjectMetadata'
  RetentionExecution:
    type: object
    properties:
      status:
        type: string
      trigger:
        type: string
      end_time:
        type: string
      dry_run:
        type: boolean
      start_time:
        type: string
      id:
        type: integer
        format: int64
      policy_id:
        type: integer
        format: int64
  RetentionPolicyScope:
    type: object
    properties:
      ref:
        type: integer
      level:
        type: string
  GeneralInfo:
    type: object
    properties:
      read_only:
        x-nullable: true
        type: boolean
        description: The flag to indicate whether Harbor is in readonly mode.
        x-omitempty: true
      authproxy_settings:
        x-nullable: true
        description: The setting of auth proxy this is only available when Harbor relies on authproxy for authentication.
        x-omitempty: true
        $ref: '#/definitions/AuthproxySetting'
      harbor_version:
        x-nullable: true
        type: string
        description: The build version of Harbor.
        x-omitempty: true
      notification_enable:
        x-nullable: true
        type: boolean
        description: The flag to indicate whether notification mechanism is enabled on Harbor instance.
        x-omitempty: true
      auth_mode:
        x-nullable: true
        type: string
        description: The auth mode of current Harbor instance.
        x-omitempty: true
      self_registration:
        x-nullable: true
        type: boolean
        description: Indicate whether the Harbor instance enable user to register himself.
        x-omitempty: true
      external_url:
        x-nullable: true
        type: string
        description: 'The external URL of Harbor, with protocol.'
        x-omitempty: true
      project_creation_restriction:
        x-nullable: true
        type: string
        description: 'Indicate who can create projects, it could be ''adminonly'' or ''everyone''.'
        x-omitempty: true
      has_ca_root:
        x-nullable: true
        type: boolean
        description: Indicate whether there is a ca root cert file ready for download in the file system.
        x-omitempty: true
      with_notary:
        x-nullable: true
        type: boolean
        description: If the Harbor instance is deployed with nested notary.
        x-omitempty: true
      registry_storage_provider_name:
        x-nullable: true
        type: string
        description: The storage provider's name of Harbor registry
        x-omitempty: true
      with_chartmuseum:
        x-nullable: true
        type: boolean
        description: If the Harbor instance is deployed with nested chartmuseum.
        x-omitempty: true
      registry_url:
        x-nullable: true
        type: string
        description: The url of registry against which the docker command should be issued.
        x-omitempty: true
  VulnerabilitySummary:
    type: object
    description: |
      VulnerabilitySummary contains the total number of the foun d vulnerabilities number and numbers of each severity level.
    properties:
      fixable:
        format: int
        type: integer
        example: 100
        x-omitempty: false
        description: The number of the fixable vulnerabilities
      total:
        format: int
        type: integer
        example: 500
        x-omitempty: false
        description: The total number of the found vulnerabilities
      summary:
        additionalProperties:
          type: integer
          example: 10
          format: int
        type: object
        description: Numbers of the vulnerabilities with different severity
        x-omitempty: false
        example:
          High: 5
          Critical: 5
  Scanner:
    type: object
    properties:
      version:
        type: string
        description: Version of the scanner adapter
        example: v0.9.1
      vendor:
        type: string
        description: Name of the scanner provider
        example: Aqua Security
      name:
        type: string
        description: Name of the scanner
        example: Trivy
  Reference:
    type: object
    properties:
      platform:
        $ref: '#/definitions/Platform'
      child_digest:
        type: string
        description: The digest of the child artifact
      urls:
        items:
          type: string
        type: array
        description: The download URLs
      parent_id:
        type: integer
        description: The parent ID of the reference
        format: int64
      child_id:
        type: integer
        description: The child ID of the reference
        format: int64
      annotations:
        $ref: '#/definitions/Annotations'
  Platform:
    type: object
    properties:
      os:
        type: string
        description: The OS that the artifact applys to
      variant:
        type: string
        description: The variant of the CPU
      architecture:
        type: string
        description: The architecture that the artifact applys to
      '''os.features''':
        items:
          type: string
        type: array
        description: The features of the OS that the artifact applys to
      '''os.version''':
        type: string
        description: The version of the OS that the artifact applys to
  RetentionRuleTrigger:
    type: object
    properties:
      kind:
        type: string
      references:
        type: object
      settings:
        type: object
  ProjectDeletable:
    type: object
    properties:
      message:
        type: string
        description: The detail message when the project can not be deleted.
      deletable:
        type: boolean
        description: Whether the project can be deleted.
  ProjectSummary:
    type: object
    properties:
      maintainer_count:
        type: integer
        description: The total number of maintainer members.
      project_admin_count:
        type: integer
        description: The total number of project admin members.
      developer_count:
        type: integer
        description: The total number of developer members.
      repo_count:
        type: integer
        description: The number of the repositories under this project.
      quota:
        type: object
        properties:
          hard:
            description: The hard limits of the quota
            $ref: '#/definitions/ResourceList'
          used:
            description: The used status of the quota
            $ref: '#/definitions/ResourceList'
      guest_count:
        type: integer
        description: The total number of guest members.
      limited_guest_count:
        type: integer
        description: The total number of limited guest members.
      registry:
        $ref: '#/definitions/Registry'
      chart_count:
        type: integer
        description: The total number of charts under this project.
  RetentionPolicy:
    type: object
    description: retention policy
    properties:
      rules:
        items:
          $ref: '#/definitions/RetentionRule'
        type: array
      scope:
        type: object
        $ref: '#/definitions/RetentionPolicyScope'
      trigger:
        type: object
        $ref: '#/definitions/RetentionRuleTrigger'
      id:
        type: integer
        format: int64
      algorithm:
        type: string
  ScanOverview:
    additionalProperties:
      $ref: '#/definitions/NativeReportSummary'
    type: object
    description: The scan overview attached in the metadata of tag
  ResourceList:
    additionalProperties:
      type: integer
      format: int64
    type: object
  Stats:
    type: object
    description: Stats provides the overall progress of the scan all process.
    properties:
      metrics:
        additionalProperties:
          type: integer
          example: 10
          format: int
        type: object
        description: The metrics data for the each status
        example:
          Running: 3
          Success: 5
          Error: 2
      total:
        format: int
        type: integer
        example: 100
        x-omitempty: false
        description: The total number of scan processes triggered by the scan all action
      completed:
        format: int
        type: integer
        example: 90
        x-omitempty: false
        description: The number of the finished scan processes triggered by the scan all action
      trigger:
        enum:
          - Manual
          - Schedule
          - Event
        type: string
        description: The trigger of the scan all job.
      ongoing:
        type: boolean
        description: A flag indicating job status of scan all.
        x-omitempty: false
  SystemInfo:
    type: object
    properties:
      storage:
        items:
          $ref: '#/definitions/Storage'
        type: array
        description: The storage of system.
  Storage:
    type: object
    properties:
      total:
        type: integer
        description: Total volume size.
        format: uint64
      free:
        type: integer
        description: Free volume size.
        format: uint64
  ProviderUnderProject:
    type: object
    properties:
      default:
        type: boolean
      enabled:
        type: boolean
      id:
        type: integer
      provider:
        type: string
  Label:
    type: object
    properties:
      update_time:
        type: string
        description: The update time of the label
        format: date-time
      description:
        type: string
        description: The description the label
      color:
        type: string
        description: The color the label
      creation_time:
        type: string
        description: The creation time the label
        format: date-time
      scope:
        type: string
        description: The scope the label
      project_id:
        type: integer
        description: The ID of project that the label belongs to
        format: int64
      id:
        type: integer
        description: The ID of the label
        format: int64
      name:
        type: string
        description: The name the label
  RetentionExecutionTask:
    type: object
    properties:
      status:
        type: string
      retained:
        type: integer
        x-omitempty: false
      job_id:
        type: string
      repository:
        type: string
      status_code:
        type: integer
        x-omitempty: false
      start_time:
        type: string
      status_revision:
        type: integer
        format: int64
      end_time:
        type: string
      total:
        type: integer
        x-omitempty: false
      id:
        type: integer
        format: int64
      execution_id:
        type: integer
        format: int64
  CVEAllowlist:
    type: object
    description: The CVE Allowlist for system or project
    properties:
      update_time:
        type: string
        description: The update time of the allowlist.
        format: date-time
      items:
        items:
          $ref: '#/definitions/CVEAllowlistItem'
        type: array
      project_id:
        type: integer
        description: ID of the project which the allowlist belongs to.  For system level allowlist this attribute is zero.
      creation_time:
        type: string
        description: The creation time of the allowlist.
        format: date-time
      id:
        type: integer
        description: ID of the allowlist
      expires_at:
        x-nullable: true
        type: integer
        description: 'the time for expiration of the allowlist, in the form of seconds since epoch.  This is an optional attribute, if it''s not set the CVE allowlist does not expire.'
  ProjectMetadata:
    type: object
    properties:
      enable_content_trust:
        x-nullable: true
        type: string
        description: 'Whether content trust is enabled or not. If it is enabled, user can''t pull unsigned images from this project. The valid values are "true", "false".'
      public:
        type: string
        description: 'The public status of the project. The valid values are "true", "false".'
      auto_scan:
        x-nullable: true
        type: string
        description: 'Whether scan images automatically when pushing. The valid values are "true", "false".'
      severity:
        x-nullable: true
        type: string
        description: 'If the vulnerability is high than severity defined here, the images can''t be pulled. The valid values are "none", "low", "medium", "high", "critical".'
      retention_id:
        x-nullable: true
        type: string
        description: The ID of the tag retention policy for the project
      reuse_sys_cve_allowlist:
        x-nullable: true
        type: string
        description: 'Whether this project reuse the system level CVE allowlist as the allowlist of its own.  The valid values are "true", "false". If it is set to "true" the actual allowlist associate with this project, if any, will be ignored.'
      prevent_vul:
        x-nullable: true
        type: string
        description: 'Whether prevent the vulnerable images from running. The valid values are "true", "false".'
  RobotPermission:
    type: object
    properties:
      access:
        items:
          $ref: '#/definitions/Access'
        type: array
      kind:
        type: string
        description: The kind of the permission
      namespace:
        type: string
        description: The namespace of the permission
  Artifact:
    type: object
    properties:
      size:
        type: integer
        description: The size of the artifact
        format: int64
      push_time:
        type: string
        description: The push time of the artifact
        format: date-time
      scan_overview:
        description: The overview of the scan result.
        $ref: '#/definitions/ScanOverview'
      tags:
        items:
          $ref: '#/definitions/Tag'
        type: array
      pull_time:
        type: string
        description: The latest pull time of the artifact
        format: date-time
      labels:
        items:
          $ref: '#/definitions/Label'
        type: array
      references:
        items:
          $ref: '#/definitions/Reference'
        type: array
      manifest_media_type:
        type: string
        description: The manifest media type of the artifact
      extra_attrs:
        $ref: '#/definitions/ExtraAttrs'
      id:
        type: integer
        description: The ID of the artifact
        format: int64
      digest:
        type: string
        description: The digest of the artifact
      icon:
        type: string
        description: The digest of the icon
      repository_id:
        type: integer
        description: The ID of the repository that the artifact belongs to
        format: int64
      addition_links:
        $ref: '#/definitions/AdditionLinks'
      media_type:
        type: string
        description: The media type of the artifact
      project_id:
        type: integer
        description: The ID of the project that the artifact belongs to
        format: int64
      type:
        type: string
        description: 'The type of the artifact, e.g. image, chart, etc'
      annotations:
        $ref: '#/definitions/Annotations'
  Metrics:
    type: object
    properties:
      pending_task_count:
        type: integer
        description: The count of pending task
      error_task_count:
        type: integer
        description: The count of error task
      task_count:
        type: integer
        description: The count of task
      scheduled_task_count:
        type: integer
        description: The count of scheduled task
      success_task_count:
        type: integer
        description: The count of success task
      stopped_task_count:
        type: integer
        description: The count of stopped task
      running_task_count:
        type: integer
        description: The count of running task
  Tag:
    type: object
    properties:
      repository_id:
        type: integer
        description: The ID of the repository that the tag belongs to
        format: int64
      name:
        type: string
        description: The name of the tag
      push_time:
        type: string
        description: The push time of the tag
        format: date-time
      pull_time:
        type: string
        description: The latest pull time of the tag
        format: date-time
      signed:
        type: boolean
        description: The attribute indicates whether the tag is signed or not
        x-omitempty: false
      id:
        type: integer
        description: The ID of the tag
        format: int64
      immutable:
        type: boolean
        description: The immutable status of the tag
        x-omitempty: false
      artifact_id:
        type: integer
        description: The ID of the artifact that the tag attached to
        format: int64
  ReplicationTask:
    type: object
    description: The replication task
    properties:
      status:
        type: string
        description: The status of the task
      job_id:
        type: string
        description: The ID of the underlying job that the task related to
      start_time:
        type: string
        description: The start time of the task
        format: date-time
      dst_resource:
        type: string
        description: The destination resource that the task operates
      src_resource:
        type: string
        description: The source resource that the task operates
      resource_type:
        type: string
        description: The type of the resource that the task operates
      operation:
        type: string
        description: The operation of the task
      id:
        type: integer
        description: The ID of the task
      execution_id:
        type: integer
        description: The ID of the execution that the task belongs to
      end_time:
        type: string
        description: The end time of the task
        format: date-time
  RobotCreateV1:
    type: object
    properties:
      access:
        items:
          $ref: '#/definitions/Access'
        type: array
        description: The permission of robot account
      name:
        type: string
        description: The name of robot account
      expires_at:
        type: integer
        description: The expiration time on or after which the JWT MUST NOT be accepted for processing.
      description:
        type: string
        description: The description of robot account
  RetentionRule:
    type: object
    properties:
      priority:
        type: integer
      scope_selectors:
        additionalProperties:
          items:
            $ref: '#/definitions/RetentionSelector'
          type: array
        type: object
      disabled:
        type: boolean
      params:
        additionalProperties:
          type: object
        type: object
      template:
        type: string
      action:
        type: string
      tag_selectors:
        items:
          $ref: '#/definitions/RetentionSelector'
        type: array
      id:
        type: integer
  CVEAllowlistItem:
    type: object
    description: The item in CVE allowlist
    properties:
      cve_id:
        type: string
        description: 'The ID of the CVE, such as "CVE-2019-10164"'
  Robot:
    type: object
    properties:
      update_time:
        type: string
        description: The update time of the robot.
        format: date-time
      description:
        type: string
        description: The description of the robot
      level:
        type: string
        description: 'The level of the robot, project or system'
      editable:
        type: boolean
        description: The editable status of the robot
        x-omitempty: false
      creation_time:
        type: string
        description: The creation time of the robot.
        format: date-time
      expires_at:
        type: integer
        description: The expiration data of the robot
        format: int64
      name:
        type: string
        description: The name of the tag
      secret:
        type: string
        description: The secret of the robot
      disable:
        type: boolean
        description: The disable status of the robot
        x-omitempty: false
      duration:
        type: integer
        description: The duration of the robot in days
        format: int64
      id:
        type: integer
        description: The ID of the robot
        format: int64
      permissions:
        items:
          $ref: '#/definitions/RobotPermission'
        type: array
  RetentionRuleMetadata:
    type: object
    description: the tag retention rule metadata
    properties:
      display_text:
        type: string
        description: rule display text
      action:
        type: string
        description: rule action
      params:
        items:
          $ref: '#/definitions/RetentionRuleParamMetadata'
        type: array
        description: rule params
      rule_template:
        type: string
        description: rule id
  ScheduleObj:
    type: object
    properties:
      cron:
        type: string
        description: 'A cron expression, a time-based job scheduler.'
      type:
        enum:
          - Hourly
          - Daily
          - Weekly
          - Custom
          - Manual
          - None
        type: string
        description: |
          The schedule type. The valid values are 'Hourly', 'Daily', 'Weekly', 'Custom', 'Manual' and 'None'.
          'Manual' means to trigger it right away and 'None' means to cancel the schedule.
  ProjectReq:
    type: object
    properties:
      project_name:
        type: string
        description: The name of the project.
      cve_allowlist:
        description: The CVE allowlist of the project.
        $ref: '#/definitions/CVEAllowlist'
      registry_id:
        x-nullable: true
        type: integer
        description: The ID of referenced registry when creating the proxy cache project
        format: int64
      public:
        x-nullable: true
        type: boolean
        description: 'deprecated, reserved for project creation in replication'
      storage_limit:
        x-nullable: true
        type: integer
        description: The storage quota of the project.
        format: int64
      metadata:
        description: The metadata of the project.
        $ref: '#/definitions/ProjectMetadata'
  AuditLog:
    type: object
    properties:
      username:
        type: string
        description: Username of the user in this log entry.
      resource:
        type: string
        description: Name of the repository in this log entry.
      operation:
        type: string
        description: The operation against the repository in this log entry.
      op_time:
        format: date-time
        type: string
        description: The time when this operation is triggered.
        example: '2006-01-02T15:04:05'
      id:
        type: integer
        description: The ID of the audit log entry.
      resource_type:
        type: string
        description: Tag of the repository in this log entry.
  RobotCreate:
    type: object
    description: The request for robot account creation.
    properties:
      secret:
        type: string
        description: The secret of the robot
      disable:
        type: boolean
        description: The disable status of the robot
      name:
        type: string
        description: The name of the tag
      level:
        type: string
        description: 'The level of the robot, project or system'
      duration:
        type: integer
        description: The duration of the robot in days
        format: int64
      description:
        type: string
        description: The description of the robot
      permissions:
        items:
          $ref: '#/definitions/RobotPermission'
        type: array
  NativeReportSummary:
    type: object
    description: The summary for the native report
    properties:
      scanner:
        $ref: '#/definitions/Scanner'
      start_time:
        format: date-time
        type: string
        example: '2006-01-02T14:04:05'
        description: The start time of the scan process that generating report
      scan_status:
        type: string
        description: The status of the report generating process
        example: Success
      summary:
        $ref: '#/definitions/VulnerabilitySummary'
      complete_percent:
        type: integer
        description: The complete percent of the scanning which value is between 0 and 100
        example: 100
      end_time:
        format: date-time
        type: string
        example: '2006-01-02T15:04:05'
        description: The end time of the scan process that generating report
      duration:
        format: int64
        type: integer
        example: 300
        description: The seconds spent for generating the report
      report_id:
        type: string
        description: id of the native scan report
        example: 5f62c830-f996-11e9-957f-0242c0a89008
      severity:
        type: string
        description: The overall severity
        example: High
  RobotSec:
    type: object
    description: The response for refresh/update robot account secret.
    properties:
      secret:
        type: string
        description: The secret of the robot
  ExtraAttrs:
    additionalProperties:
      type: object
    type: object
  RetentionSelectorMetadata:
    type: object
    description: retention selector
    properties:
      display_text:
        type: string
      kind:
        type: string
      decorations:
        items:
          type: string
        type: array
  AdditionLinks:
    additionalProperties:
      $ref: '#/definitions/AdditionLink'
    type: object
  RetentionSelector:
    type: object
    properties:
      decoration:
        type: string
      pattern:
        type: string
      kind:
        type: string
      extras:
        type: string
security:
  - basic: []
  - {}
swagger: '2.0'
consumes:
  - application/json
