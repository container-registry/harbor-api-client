openapi: 3.0.1
info:
  title: Harbor API
  description: These APIs provide services for manipulating Harbor project.
  version: '2.0'
servers:
  - url: 'http://localhost/api/v2.0'
  - url: 'https://localhost/api/v2.0'
security:
  - basic: []
  - {}
paths:
  '/projects/{project_name}/repositories':
    get:
      tags:
        - repository
      summary: List repositories
      description: List repositories of the specified project
      operationId: listRepositories
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: >-
            Query string to query resources. Supported query patterns are "exact
            match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
            union releationship(k={v1 v2 v3})" and "list with intersetion
            relationship(k=(v1 v2 v3))". The value of range and list can be
            string(enclosed by " or '), integer or time(in format "2020-04-09
            02:36:00"). All of these query patterns should be put in the query
            string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
          schema:
            type: string
        - name: page
          in: query
          description: The page number
          schema:
            type: integer
            format: int64
            default: 1
        - name: page_size
          in: query
          description: The size of per page
          schema:
            type: integer
            format: int64
            default: 10
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: The total count of repositories
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repository'
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  '/projects/{project_name}/repositories/{repository_name}':
    get:
      tags:
        - repository
      summary: Get repository
      description: Get the repository specified by name
      operationId: getRepository
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    put:
      tags:
        - repository
      summary: Update repository
      description: Update the repository specified by name
      operationId: updateRepository
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
      requestBody:
        description: The JSON object of repository.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content: {}
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: repository
    delete:
      tags:
        - repository
      summary: Delete repository
      description: Delete the repository specified by name
      operationId: deleteRepository
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content: {}
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  '/projects/{project_name}/repositories/{repository_name}/artifacts':
    get:
      tags:
        - artifact
      summary: List artifacts
      description: >-
        List artifacts under the specific project and repository. Except the
        basic properties, the other supported queries in "q" includes "tags=*"
        to list only tagged artifacts, "tags=nil" to list only untagged
        artifacts, "tags=~v" to list artifacts whose tag fuzzy matches "v",
        "tags=v" to list artifact whose tag exactly matches "v", "labels=(id1,
        id2)" to list artifacts that both labels with id1 and id2 are added to
      operationId: listArtifacts
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: >-
            Query string to query resources. Supported query patterns are "exact
            match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
            union releationship(k={v1 v2 v3})" and "list with intersetion
            relationship(k=(v1 v2 v3))". The value of range and list can be
            string(enclosed by " or '), integer or time(in format "2020-04-09
            02:36:00"). All of these query patterns should be put in the query
            string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
          schema:
            type: string
        - name: page
          in: query
          description: The page number
          schema:
            type: integer
            format: int64
            default: 1
        - name: page_size
          in: query
          description: The size of per page
          schema:
            type: integer
            format: int64
            default: 10
        - name: with_tag
          in: query
          description: Specify whether the tags are included inside the returning artifacts
          schema:
            type: boolean
            default: true
        - name: with_label
          in: query
          description: >-
            Specify whether the labels are included inside the returning
            artifacts
          schema:
            type: boolean
            default: false
        - name: with_scan_overview
          in: query
          description: >-
            Specify whether the scan overview is included inside the returning
            artifacts
          schema:
            type: boolean
            default: false
        - name: with_signature
          in: query
          description: >-
            Specify whether the signature is included inside the tags of the
            returning artifacts. Only works when setting "with_tag=true"
          schema:
            type: boolean
            default: false
        - name: with_immutable_status
          in: query
          description: >-
            Specify whether the immutable status is included inside the tags of
            the returning artifacts. Only works when setting "with_tag=true"
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: The total count of artifacts
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artifact'
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    post:
      tags:
        - artifact
      summary: Copy artifact
      description: Copy the artifact specified in the "from" parameter to the repository.
      operationId: CopyArtifact
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: from
          in: query
          description: >-
            The artifact from which the new artifact is copied from, the format
            should be "project/repository:tag" or "project/repository@digest".
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
            Location:
              description: The location of the resource
              schema:
                type: string
          content: {}
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}':
    get:
      tags:
        - artifact
      summary: Get the specific artifact
      description: >-
        Get the artifact specified by the reference under the project and
        repository. The reference can be digest or tag.
      operationId: getArtifact
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: reference
          in: path
          description: 'The reference of the artifact, can be digest or tag'
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page number
          schema:
            type: integer
            format: int64
            default: 1
        - name: page_size
          in: query
          description: The size of per page
          schema:
            type: integer
            format: int64
            default: 10
        - name: with_tag
          in: query
          description: Specify whether the tags are inclued inside the returning artifacts
          schema:
            type: boolean
            default: true
        - name: with_label
          in: query
          description: >-
            Specify whether the labels are inclued inside the returning
            artifacts
          schema:
            type: boolean
            default: false
        - name: with_scan_overview
          in: query
          description: >-
            Specify whether the scan overview is inclued inside the returning
            artifacts
          schema:
            type: boolean
            default: false
        - name: with_signature
          in: query
          description: >-
            Specify whether the signature is inclued inside the returning
            artifacts
          schema:
            type: boolean
            default: false
        - name: with_immutable_status
          in: query
          description: >-
            Specify whether the immutable status is inclued inside the tags of
            the returning artifacts. Only works when setting "with_tag=true"
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    delete:
      tags:
        - artifact
      summary: Delete the specific artifact
      description: >-
        Delete the artifact specified by the reference under the project and
        repository. The reference can be digest or tag
      operationId: deleteArtifact
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: reference
          in: path
          description: 'The reference of the artifact, can be digest or tag'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content: {}
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan':
    post:
      tags:
        - scan
      summary: Scan the artifact
      description: Scan the specified artifact
      operationId: scanArtifact
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: reference
          in: path
          description: 'The reference of the artifact, can be digest or tag'
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content: {}
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan/{report_id}/log':
    get:
      tags:
        - scan
      summary: Get the log of the scan report
      description: Get the log of the scan report
      operationId: getReportLog
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: reference
          in: path
          description: 'The reference of the artifact, can be digest or tag'
          required: true
          schema:
            type: string
        - name: report_id
          in: path
          description: The report id to get the log
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully get scan log file
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Errors'
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags':
    get:
      tags:
        - artifact
      summary: List tags
      description: List tags of the specific artifact
      operationId: listTags
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: reference
          in: path
          description: 'The reference of the artifact, can be digest or tag'
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: >-
            Query string to query resources. Supported query patterns are "exact
            match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
            union releationship(k={v1 v2 v3})" and "list with intersetion
            relationship(k=(v1 v2 v3))". The value of range and list can be
            string(enclosed by " or '), integer or time(in format "2020-04-09
            02:36:00"). All of these query patterns should be put in the query
            string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
          schema:
            type: string
        - name: page
          in: query
          description: The page number
          schema:
            type: integer
            format: int64
            default: 1
        - name: page_size
          in: query
          description: The size of per page
          schema:
            type: integer
            format: int64
            default: 10
        - name: with_signature
          in: query
          description: Specify whether the signature is included inside the returning tags
          schema:
            type: boolean
            default: false
        - name: with_immutable_status
          in: query
          description: >-
            Specify whether the immutable status is included inside the
            returning tags
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: The total count of tags
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    post:
      tags:
        - artifact
      summary: Create tag
      description: Create a tag for the specified artifact
      operationId: createTag
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: reference
          in: path
          description: 'The reference of the artifact, can be digest or tag'
          required: true
          schema:
            type: string
      requestBody:
        description: The JSON object of tag.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        '201':
          description: Created
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
            Location:
              description: The location of the resource
              schema:
                type: string
          content: {}
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '409':
          description: Conflict
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: tag
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags/{tag_name}':
    delete:
      tags:
        - artifact
      summary: Delete tag
      description: Delete the tag of the specified artifact
      operationId: deleteTag
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: reference
          in: path
          description: 'The reference of the artifact, can be digest or tag'
          required: true
          schema:
            type: string
        - name: tag_name
          in: path
          description: The name of the tag
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content: {}
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/{addition}':
    get:
      tags:
        - artifact
      summary: Get the addition of the specific artifact
      description: >-
        Get the addition of the artifact specified by the reference under the
        project and repository.
      operationId: getAddition
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: reference
          in: path
          description: 'The reference of the artifact, can be digest or tag'
          required: true
          schema:
            type: string
        - name: addition
          in: path
          description: The type of addition.
          required: true
          schema:
            type: string
            enum:
              - build_history
              - values.yaml
              - readme.md
              - dependencies
              - vulnerabilities
      responses:
        '200':
          description: Success
          headers:
            Content-Type:
              description: The content type of the addition
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels':
    post:
      tags:
        - artifact
      summary: Add label to artifact
      description: Add label to the specified artiact.
      operationId: addLabel
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: reference
          in: path
          description: 'The reference of the artifact, can be digest or tag'
          required: true
          schema:
            type: string
      requestBody:
        description: The label that added to the artifact. Only the ID property is needed.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      responses:
        '200':
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content: {}
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '409':
          description: Conflict
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      x-codegen-request-body-name: label
  '/projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels/{label_id}':
    delete:
      tags:
        - artifact
      summary: Remove label from artifact
      description: Remove the label from the specified artiact.
      operationId: removeLabel
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: repository_name
          in: path
          description: >-
            The name of the repository. If it contains slash, encode it with URL
            encoding. e.g. a/b -> a%252Fb
          required: true
          schema:
            type: string
        - name: reference
          in: path
          description: 'The reference of the artifact, can be digest or tag'
          required: true
          schema:
            type: string
        - name: label_id
          in: path
          description: The ID of the label that removed from the artifact.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content: {}
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not found
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '409':
          description: Conflict
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  /audit-logs:
    get:
      tags:
        - auditlog
      summary: Get recent logs of the projects which the user is a member of
      description: >
        This endpoint let user see the recent operation logs of the projects
        which he is member of
      operationId: listAuditLogs
      parameters:
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: q
          in: query
          description: >-
            Query string to query resources. Supported query patterns are "exact
            match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
            union releationship(k={v1 v2 v3})" and "list with intersetion
            relationship(k=(v1 v2 v3))". The value of range and list can be
            string(enclosed by " or '), integer or time(in format "2020-04-09
            02:36:00"). All of these query patterns should be put in the query
            string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
          schema:
            type: string
        - name: page
          in: query
          description: The page number
          schema:
            type: integer
            format: int64
            default: 1
        - name: page_size
          in: query
          description: The size of per page
          schema:
            type: integer
            format: int64
            default: 10
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: The total count of auditlogs
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
  '/projects/{project_name}/logs':
    get:
      tags:
        - project
      summary: Get recent logs of the projects
      description: Get recent logs of the projects
      operationId: getLogs
      parameters:
        - name: project_name
          in: path
          description: The name of the project
          required: true
          schema:
            type: string
        - name: X-Request-Id
          in: header
          description: An unique ID for the request
          schema:
            minLength: 1
            type: string
        - name: q
          in: query
          description: >-
            Query string to query resources. Supported query patterns are "exact
            match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with
            union releationship(k={v1 v2 v3})" and "list with intersetion
            relationship(k=(v1 v2 v3))". The value of range and list can be
            string(enclosed by " or '), integer or time(in format "2020-04-09
            02:36:00"). All of these query patterns should be put in the query
            string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
          schema:
            type: string
        - name: page
          in: query
          description: The page number
          schema:
            type: integer
            format: int64
            default: 1
        - name: page_size
          in: query
          description: The size of per page
          schema:
            type: integer
            format: int64
            default: 10
      responses:
        '200':
          description: Success
          headers:
            X-Total-Count:
              description: The total count of auditlogs
              schema:
                type: integer
            Link:
              description: Link refers to the previous page and next page
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
        '400':
          description: Bad request
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '401':
          description: Unauthorized
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal server error
          headers:
            X-Request-Id:
              description: The ID of the corresponding request for the response
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
components:
  schemas:
    Errors:
      type: array
      description: >-
        The error array that describe the errors got during the handling of
        request
      items:
        $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        code:
          type: string
          description: The error code
        message:
          type: string
          description: The error message
      description: a model for all the error response coming from harbor
    Repository:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the repository
          format: int64
        project_id:
          type: integer
          description: The ID of the project that the repository belongs to
          format: int64
        name:
          type: string
          description: The name of the repository
        description:
          type: string
          description: The description of the repository
        artifact_count:
          type: integer
          description: The count of the artifacts inside the repository
          format: int64
        pull_count:
          type: integer
          description: The count that the artifact inside the repository pulled
          format: int64
        creation_time:
          type: string
          description: The creation time of the repository
          format: date-time
        update_time:
          type: string
          description: The update time of the repository
          format: date-time
    Artifact:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the artifact
          format: int64
        type:
          type: string
          description: 'The type of the artifact, e.g. image, chart, etc'
        media_type:
          type: string
          description: The media type of the artifact
        manifest_media_type:
          type: string
          description: The manifest media type of the artifact
        project_id:
          type: integer
          description: The ID of the project that the artifact belongs to
          format: int64
        repository_id:
          type: integer
          description: The ID of the repository that the artifact belongs to
          format: int64
        digest:
          type: string
          description: The digest of the artifact
        size:
          type: integer
          description: The size of the artifact
          format: int64
        push_time:
          type: string
          description: The push time of the artifact
          format: date-time
        pull_time:
          type: string
          description: The latest pull time of the artifact
          format: date-time
        extra_attrs:
          $ref: '#/components/schemas/ExtraAttrs'
        annotations:
          $ref: '#/components/schemas/Annotations'
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        addition_links:
          $ref: '#/components/schemas/AdditionLinks'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        scan_overview:
          $ref: '#/components/schemas/ScanOverview'
    Tag:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the tag
          format: int64
        repository_id:
          type: integer
          description: The ID of the repository that the tag belongs to
          format: int64
        artifact_id:
          type: integer
          description: The ID of the artifact that the tag attached to
          format: int64
        name:
          type: string
          description: The name of the tag
        push_time:
          type: string
          description: The push time of the tag
          format: date-time
        pull_time:
          type: string
          description: The latest pull time of the tag
          format: date-time
        immutable:
          type: boolean
          description: The immutable status of the tag
          x-omitempty: false
        signed:
          type: boolean
          description: The attribute indicates whether the tag is signed or not
          x-omitempty: false
    ExtraAttrs:
      type: object
      additionalProperties:
        type: object
        properties: {}
    Annotations:
      type: object
      additionalProperties:
        type: string
    AdditionLinks:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AdditionLink'
    AdditionLink:
      type: object
      properties:
        href:
          type: string
          description: The link of the addition
        absolute:
          type: boolean
          description: Determine whether the link is an absolute URL or not
          x-omitempty: false
    Reference:
      type: object
      properties:
        parent_id:
          type: integer
          description: The parent ID of the reference
          format: int64
        child_id:
          type: integer
          description: The child ID of the reference
          format: int64
        child_digest:
          type: string
          description: The digest of the child artifact
        platform:
          $ref: '#/components/schemas/Platform'
        annotations:
          $ref: '#/components/schemas/Annotations'
        urls:
          type: array
          description: The download URLs
          items:
            type: string
    Platform:
      type: object
      properties:
        architecture:
          type: string
          description: The architecture that the artifact applys to
        os:
          type: string
          description: The OS that the artifact applys to
        '''os.version''':
          type: string
          description: The version of the OS that the artifact applys to
        '''os.features''':
          type: array
          description: The features of the OS that the artifact applys to
          items:
            type: string
        variant:
          type: string
          description: The variant of the CPU
    Label:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the label
          format: int64
        name:
          type: string
          description: The name the label
        description:
          type: string
          description: The description the label
        color:
          type: string
          description: The color the label
        scope:
          type: string
          description: The scope the label
        project_id:
          type: integer
          description: The ID of project that the label belongs to
          format: int64
        creation_time:
          type: string
          description: The creation time the label
          format: date-time
        update_time:
          type: string
          description: The update time of the label
          format: date-time
    ScanOverview:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/NativeReportSummary'
      description: The scan overview attached in the metadata of tag
    NativeReportSummary:
      type: object
      properties:
        report_id:
          type: string
          description: id of the native scan report
          example: 5f62c830-f996-11e9-957f-0242c0a89008
        scan_status:
          type: string
          description: The status of the report generating process
          example: Success
        severity:
          type: string
          description: The overall severity
          example: High
        duration:
          type: integer
          description: The seconds spent for generating the report
          format: int64
          example: 300
        summary:
          $ref: '#/components/schemas/VulnerabilitySummary'
        start_time:
          type: string
          description: The start time of the scan process that generating report
          format: date-time
        end_time:
          type: string
          description: The end time of the scan process that generating report
          format: date-time
        complete_percent:
          type: integer
          description: >-
            The complete percent of the scanning which value is between 0 and
            100
          example: 100
      description: The summary for the native report
    VulnerabilitySummary:
      type: object
      properties:
        total:
          type: integer
          description: The total number of the found vulnerabilities
          format: int
          example: 500
        fixable:
          type: integer
          description: The number of the fixable vulnerabilities
          format: int
          example: 100
        summary:
          type: object
          additionalProperties:
            type: integer
            format: int
            example: 10
          description: Numbers of the vulnerabilities with different severity
          example:
            Critical: 5
            High: 5
      description: >
        VulnerabilitySummary contains the total number of the foun d
        vulnerabilities number and numbers of each severity level.
    AuditLog:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the audit log entry.
        username:
          type: string
          description: Username of the user in this log entry.
        resource:
          type: string
          description: Name of the repository in this log entry.
        resource_type:
          type: string
          description: Tag of the repository in this log entry.
        operation:
          type: string
          description: The operation against the repository in this log entry.
        op_time:
          type: string
          description: The time when this operation is triggered.
  responses:
    '200':
      description: Success
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          schema:
            type: string
      content: {}
    '201':
      description: Created
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          schema:
            type: string
        Location:
          description: The location of the resource
          schema:
            type: string
      content: {}
    '202':
      description: Accepted
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          schema:
            type: string
      content: {}
    '400':
      description: Bad request
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    '401':
      description: Unauthorized
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    '403':
      description: Forbidden
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    '404':
      description: Not found
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    '409':
      description: Conflict
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    '500':
      description: Internal server error
      headers:
        X-Request-Id:
          description: The ID of the corresponding request for the response
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
  parameters:
    query:
      name: q
      in: query
      description: >-
        Query string to query resources. Supported query patterns are "exact
        match(k=v)", "fuzzy match(k=~v)", "range(k=[min~max])", "list with union
        releationship(k={v1 v2 v3})" and "list with intersetion
        relationship(k=(v1 v2 v3))". The value of range and list can be
        string(enclosed by " or '), integer or time(in format "2020-04-09
        02:36:00"). All of these query patterns should be put in the query
        string "q=xxx" and splitted by ",". e.g. q=k1=v1,k2=~v2,k3=[min~max]
      schema:
        type: string
    requestId:
      name: X-Request-Id
      in: header
      description: An unique ID for the request
      schema:
        minLength: 1
        type: string
    projectName:
      name: project_name
      in: path
      description: The name of the project
      required: true
      schema:
        type: string
    projectId:
      name: project_id
      in: path
      description: The ID of the project
      required: true
      schema:
        type: string
    repositoryName:
      name: repository_name
      in: path
      description: >-
        The name of the repository. If it contains slash, encode it with URL
        encoding. e.g. a/b -> a%252Fb
      required: true
      schema:
        type: string
    reference:
      name: reference
      in: path
      description: 'The reference of the artifact, can be digest or tag'
      required: true
      schema:
        type: string
    tagName:
      name: tag_name
      in: path
      description: The name of the tag
      required: true
      schema:
        type: string
    page:
      name: page
      in: query
      description: The page number
      schema:
        type: integer
        format: int64
        default: 1
    pageSize:
      name: page_size
      in: query
      description: The size of per page
      schema:
        type: integer
        format: int64
        default: 10
  securitySchemes:
    basic:
      type: http
      scheme: basic
